1
00:00:04,250 --> 00:00:07,410
In the introduction, we saw that it's
possible to think of the

2
00:00:07,410 --> 00:00:10,820
dynamics of the game as a state grpah,
like the one shown here.

3
00:00:10,820 --> 00:00:17,300
The game is characterized by a finitie
number of states and also

4
00:00:17,300 --> 00:00:21,960
a finite number of players and there's a
finite number of actions for each player.

5
00:00:23,250 --> 00:00:27,450
At each point in time the graph is in one
of the possible states.

6
00:00:27,450 --> 00:00:30,380
The players choose from their possible
actions and

7
00:00:30,380 --> 00:00:32,550
as the players perform their chosen
actions

8
00:00:32,550 --> 00:00:35,260
the game changes from one state to
another.

9
00:00:38,040 --> 00:00:42,380
In the vast majority of games, states and
actions, however, are not monolithic.

10
00:00:42,380 --> 00:00:45,730
They can be defined in terms of more
fundamental entities.

11
00:00:45,730 --> 00:00:48,190
In chess, for example, states can be
thought of

12
00:00:48,190 --> 00:00:51,300
in terms of locations of individual pieces
on the chessboard.

13
00:00:52,690 --> 00:00:56,030
For example, the state shown on the left
here can be thought of in terms of

14
00:00:56,030 --> 00:00:59,130
the locations of the white king, the white

15
00:00:59,130 --> 00:01:02,160
queen, the black king, and the black
queen.

16
00:01:06,300 --> 00:01:11,510
Also, in the vast majority of games, the
effects of individual actions are local.

17
00:01:11,510 --> 00:01:13,820
As actions are performed, some of these

18
00:01:13,820 --> 00:01:16,950
conditions become true and others become
false.

19
00:01:16,950 --> 00:01:20,860
However the truth values of the majority
of these conditions remain the same.

20
00:01:24,090 --> 00:01:30,040
The ideas of state decomposition and
limited influence of actions suggest

21
00:01:30,040 --> 00:01:34,730
the conceptualization of games in terms of
individual propositions and actions

22
00:01:34,730 --> 00:01:38,360
rather than states, together with the
representation of the effects of

23
00:01:38,360 --> 00:01:41,879
these actions on these propositions rather
than on the entire states.

24
00:01:43,010 --> 00:01:47,190
Results is an alternative representation
of dynamics called a Propositional Net.

25
00:01:48,670 --> 00:01:49,250
Unlike a state

26
00:01:49,250 --> 00:01:52,710
machine, in which the nodes represent
states,

27
00:01:52,710 --> 00:01:55,450
in a Propositional Net, the nodes denote

28
00:01:55,450 --> 00:01:58,910
propositions and actions together with
connectives that

29
00:01:58,910 --> 00:02:01,730
capture their behavior, as we shall see.

30
00:02:04,200 --> 00:02:08,860
One of the benefits of formalizing games'
propositional nets is compactness.

31
00:02:08,860 --> 00:02:13,060
A set of end propositions corresponds to a
set of 2 to the n

32
00:02:13,060 --> 00:02:15,550
possible states, all of the different
combinations

33
00:02:15,550 --> 00:02:17,610
of the truth values for the n
propositions.

34
00:02:18,720 --> 00:02:21,940
Thus it's often possible to characterize
the dynamics of games

35
00:02:21,940 --> 00:02:25,059
with graphs that are much smaller than the
corresponding state machines.

36
00:02:26,160 --> 00:02:29,480
For example, a prop net with just three
propositions corresponds

37
00:02:29,480 --> 00:02:32,150
to a state machine with eight possible
states.

38
00:02:34,170 --> 00:02:37,785
The second benefit of propositional nets
is ease of analysis.

39
00:02:37,785 --> 00:02:45,520
It's sometimes possible to use a prop net
to discover independence, or game factors,

40
00:02:45,520 --> 00:02:47,680
dead states, and other features that can

41
00:02:47,680 --> 00:02:50,630
dramatically reduce the cost of game tree
search.

42
00:02:53,720 --> 00:02:56,990
In the next segment, we formalize
propositional nets.

43
00:02:56,990 --> 00:03:00,340
And in the section thereafter, we show how
to describe games in this way.

44
00:03:01,340 --> 00:03:03,760
And in the segment after that, we see how
to play

45
00:03:03,760 --> 00:03:07,770
games using game descriptions encoded as
propositional nets rather than in GDL.

46
00:03:07,770 --> 00:03:10,490
And we then see how to use propositional

47
00:03:10,490 --> 00:03:14,850
nets in restructuring games and
discovering game-specific heuristics.

